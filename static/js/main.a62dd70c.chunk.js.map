{"version":3,"sources":["components/Header/Navigation.js","components/Card/Card.js","components/Button/AddButton.js","components/Main/Home.js","components/Main/AddHabit.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","Component","Card","props","name","type","defaultChecked","isChecked","AddButton","react_router_dom","to","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","habits","getHabits","bind","assertThisInitialized","localStorage","getItem","setState","JSON","parse","arr","console","log","_this2","map","item","components_Card_Card","key","checked","Button_AddButton","AddHabit","daysweek","notification","checkeddays","handleChange","addHabit","obj","push","setItem","stringify","event","target","value","defineProperty","id","onChange","htmlFor","disabled","selected","onClick","App","M","AutoInit","Navigation","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a62dd70c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render () {\r\n        return (\r\n            <nav className=\"nav-wrapper\">\r\n                <span>Abril</span>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className=\"card card-habits\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">{props.name}</span>\r\n                <div className=\"days\">\r\n                    <label>\r\n                        <input type=\"checkbox\" defaultChecked={props.isChecked} />\r\n                        <span className=\"weekday\">QUI</span>\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" />\r\n                        <span className=\"weekday\">SEX</span>\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" />\r\n                        <span className=\"weekday\">SAB</span>\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" />\r\n                        <span className=\"weekday\">DOM</span>\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" />\r\n                        <span className=\"weekday\">SEG</span>\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" />\r\n                        <span className=\"weekday\">TER</span>\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" />\r\n                        <span className=\"weekday\">QUA</span>\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" />\r\n                        <span className=\"weekday\">QUI</span>\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" />\r\n                        <span className=\"weekday\">SEX</span>\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"checkbox\" />\r\n                        <span className=\"weekday today\">HOJE</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddButton = () => {\r\n    return (\r\n        <div className=\"fixed-action-btn\">\r\n          <Link to=\"/add\" className=\"waves-effect waves-light btn-floating btn-large add-btn\">\r\n            <i className=\"large material-icons\">add</i>\r\n          </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddButton;","import React, { Component } from 'react';\r\nimport Card from '../Card/Card'\r\nimport AddButton from '../Button/AddButton';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            habits: [],\r\n            isChecked: true\r\n        }\r\n        this.getHabits = this.getHabits.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(\"habits\") !== null) {\r\n            this.setState({habits: JSON.parse(localStorage.getItem(\"habits\"))});\r\n        }\r\n    }\r\n\r\n    getHabits () {\r\n        var arr = [{name: \"gustavo\"}]\r\n        console.log(arr);\r\n        return arr;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                {this.state.habits.map((item => <Card key=\"\" name={item.name} checked={this.state.isChecked}/> ))}\r\n                <div className=\"nothing-here\">\r\n                    <p>Ainda não há nenhum hábito criado :(</p>\r\n                    <p>Clique no botão de \"+\" para criar um novo hábito</p>\r\n                </div>\r\n                <AddButton />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass AddHabit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            daysweek: ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'],\r\n            notification: false,\r\n            checkeddays: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addHabit = this.addHabit.bind(this);\r\n    }\r\n\r\n    addHabit () {\r\n        if (localStorage.getItem(\"habits\") !== null) {\r\n            var obj = JSON.parse(localStorage.getItem(\"habits\"));\r\n        } else {\r\n            var obj = [];\r\n        }\r\n        obj.push(this.state);\r\n        localStorage.setItem(\"habits\", JSON.stringify(obj));\r\n    }\r\n\r\n    handleChange (event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-habit\">\r\n            <form className=\"col\">\r\n                <div className=\"input-field col\">\r\n                    <input id=\"name\" name=\"name\" value={this.state.name} onChange={this.handleChange} type=\"text\"/>\r\n                    <label htmlFor=\"name\">Nome</label>\r\n                </div>\r\n                <div className=\"input-field col\">\r\n                    <select>\r\n                        <option value=\"\" disabled selected>Frequência</option>\r\n                        <option value=\"1\">Diariamente</option>\r\n                        <option value=\"2\">Semanalmente</option>\r\n                    </select>\r\n                </div>\r\n                <label className=\"notification\">\r\n                    <input type=\"checkbox\" name=\"notification\" checked={this.state.notification} onChange={this.handleChange} className=\"filled-in\" />\r\n                    <span>Ativar notificação</span>\r\n                </label>\r\n                <Link to=\"/\" onClick={this.addHabit} className=\"waves-effect waves-light btn-large\">Criar hábito</Link>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddHabit;","import React, { Component } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from \"materialize-css\";\nimport './App.css';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Navbar from './components/Header/Navigation';\nimport Home from './components/Main/Home';\nimport AddHabit from './components/Main/AddHabit';\n\nclass App extends Component {\n  componentDidMount() {\n    M.AutoInit();\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <header>\n            <Navbar />\n          </header>\n\n          <main>\n            <Switch>\n              <Route path=\"/\" component={Home} exact />\n              <Route path=\"/add\" component={AddHabit} exact />\n            </Switch>\n          </main>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('container'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}